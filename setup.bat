@echo off
setlocal enabledelayedexpansion

:: üéß Podcastify Setup Script for Windows
:: T·ª± ƒë·ªông setup project v√† push l√™n GitHub

echo üéß Podcastify Setup Script
echo ==========================
echo.

:: Check if Node.js is installed
echo Checking Node.js...
node --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Node.js not found. Please install Node.js 18+ first.
    pause
    exit /b 1
) else (
    for /f "tokens=*" %%i in ('node --version') do set NODE_VERSION=%%i
    echo ‚úÖ Node.js detected: !NODE_VERSION!
)

:: Check if Git is installed
echo Checking Git...
git --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Git not found. Please install Git first.
    pause
    exit /b 1
) else (
    echo ‚úÖ Git is installed
)

:: Install dependencies
echo.
echo ‚ÑπÔ∏è  Installing dependencies...
call npm install
if %errorlevel% neq 0 (
    echo ‚ùå Failed to install dependencies
    pause
    exit /b 1
) else (
    echo ‚úÖ Dependencies installed successfully
)

:: Setup environment file
echo.
if not exist ".env.local" (
    echo ‚ÑπÔ∏è  Creating .env.local file...
    copy .env.example .env.local >nul
    echo ‚ö†Ô∏è  Please edit .env.local with your API keys before running the app
    echo ‚ÑπÔ∏è  You need:
    echo   - OpenAI API Key (required)
    echo   - Google Cloud TTS credentials (optional)
) else (
    echo ‚úÖ .env.local already exists
)

:: Initialize Git repository
echo.
if not exist ".git" (
    echo ‚ÑπÔ∏è  Initializing Git repository...
    git init
    git add .
    git commit -m "üéâ Initial commit: Podcastify - PDF to Audio Converter with Pastel UI"
    echo ‚úÖ Git repository initialized
) else (
    echo ‚úÖ Git repository already exists
)

:: Get GitHub info
echo.
echo ‚ÑπÔ∏è  GitHub Repository Setup
echo ========================
echo.
set /p GITHUB_USERNAME="Enter your GitHub username: "
set /p REPO_NAME="Enter repository name (default: podcastify): "
if "!REPO_NAME!"=="" set REPO_NAME=podcastify

echo.
echo ‚ÑπÔ∏è  Repository will be created at: https://github.com/!GITHUB_USERNAME!/!REPO_NAME!
set /p CONTINUE="Continue? (y/n): "
if /i not "!CONTINUE!"=="y" (
    echo ‚ö†Ô∏è  Setup cancelled by user
    pause
    exit /b 1
)

:: Setup GitHub remote
echo.
echo ‚ÑπÔ∏è  Setting up GitHub remote...
git remote remove origin >nul 2>&1
git remote add origin "https://github.com/!GITHUB_USERNAME!/!REPO_NAME!.git"
echo ‚úÖ GitHub remote configured

echo.
echo ‚ö†Ô∏è  Make sure to create the repository on GitHub first!
echo ‚ÑπÔ∏è  Visit: https://github.com/new
echo ‚ÑπÔ∏è  Repository name: !REPO_NAME!
echo ‚ÑπÔ∏è  Description: üéß Modern PDF to Audio Converter with Beautiful Pastel UI
echo.
pause

:: Push to GitHub
echo.
echo ‚ÑπÔ∏è  Pushing code to GitHub...
git push -u origin main
if %errorlevel% neq 0 (
    echo ‚ùå Failed to push to GitHub
    echo ‚ÑπÔ∏è  You may need to:
    echo   1. Create the repository on GitHub first
    echo   2. Setup authentication (SSH key or personal access token)
    echo   3. Run: git push -u origin main
) else (
    echo ‚úÖ Code pushed successfully!
    echo ‚ÑπÔ∏è  Repository URL: https://github.com/!GITHUB_USERNAME!/!REPO_NAME!
)

:: Create release tag
echo.
echo ‚ÑπÔ∏è  Creating release tag...
git tag -a v1.0.0 -m "üéâ Release v1.0.0: Initial release with pastel UI"
git push origin v1.0.0
if %errorlevel% neq 0 (
    echo ‚ö†Ô∏è  Failed to push tag (repository might not exist yet)
) else (
    echo ‚úÖ Release tag created: v1.0.0
)

:: Show next steps
echo.
echo ‚úÖ Setup Complete! üéâ
echo ==================
echo.
echo ‚ÑπÔ∏è  Next steps:
echo 1. Edit .env.local with your API keys
echo 2. Test locally: npm run dev
echo 3. Deploy to Vercel: see DEPLOYMENT.md
echo.
echo ‚ÑπÔ∏è  Useful commands:
echo   npm run dev     - Start development server
echo   npm run build   - Build for production
echo   npm run lint    - Run linter
echo.
echo ‚ÑπÔ∏è  Documentation:
echo   üìñ Getting Started: ./GETTING_STARTED.md
echo   üöÄ Deployment: ./DEPLOYMENT.md
echo   üìö Git Setup: ./GIT_SETUP.md
echo.
echo ‚ÑπÔ∏è  Repository: https://github.com/!GITHUB_USERNAME!/!REPO_NAME!
echo.
pause
